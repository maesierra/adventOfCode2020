<?php
/**
 * Created by PhpStorm.
 * User: maesierra
 * Date: 01/12/2020
 * Time: 20:43
 */

namespace maesierra\AdventOfCode2020;


use PHPUnit\Framework\TestCase;

class Day11Test extends TestCase {

    public function testApplyRules() {
        $day11 = new Day11();
        $state0 = [
            ['L','.','L','L','.','L','L','.','L','L'],
            ['L','L','L','L','L','L','L','.','L','L'],
            ['L','.','L','.','L','.','.','L','.','.'],
            ['L','L','L','L','.','L','L','.','L','L'],
            ['L','.','L','L','.','L','L','.','L','L'],
            ['L','.','L','L','L','L','L','.','L','L'],
            ['.','.','L','.','L','.','.','.','.','.'],
            ['L','L','L','L','L','L','L','L','L','L'],
            ['L','.','L','L','L','L','L','L','.','L'],
            ['L','.','L','L','L','L','L','.','L','L'],
        ];
        $state1 = [
            ['#','.','#','#','.','#','#','.','#','#'],
            ['#','#','#','#','#','#','#','.','#','#'],
            ['#','.','#','.','#','.','.','#','.','.'],
            ['#','#','#','#','.','#','#','.','#','#'],
            ['#','.','#','#','.','#','#','.','#','#'],
            ['#','.','#','#','#','#','#','.','#','#'],
            ['.','.','#','.','#','.','.','.','.','.'],
            ['#','#','#','#','#','#','#','#','#','#'],
            ['#','.','#','#','#','#','#','#','.','#'],
            ['#','.','#','#','#','#','#','.','#','#'],
        ];
        $state2 = [
            ['#','.','L','L','.','L','#','.','#','#'],
            ['#','L','L','L','L','L','L','.','L','#'],
            ['L','.','L','.','L','.','.','L','.','.'],
            ['#','L','L','L','.','L','L','.','L','#'],
            ['#','.','L','L','.','L','L','.','L','L'],
            ['#','.','L','L','L','L','#','.','#','#'],
            ['.','.','L','.','L','.','.','.','.','.'],
            ['#','L','L','L','L','L','L','L','L','#'],
            ['#','.','L','L','L','L','L','L','.','L'],
            ['#','.','#','L','L','L','L','.','#','#'],
        ];

        $this->assertEquals($state1, $day11->applyRules($state0));
        $this->assertEquals($state2, $day11->applyRules($state1));
    }

    public function testApplyRules_v2() {
        $day11 = new Day11();
        $state0 = [
            ['L','.','L','L','.','L','L','.','L','L'],
            ['L','L','L','L','L','L','L','.','L','L'],
            ['L','.','L','.','L','.','.','L','.','.'],
            ['L','L','L','L','.','L','L','.','L','L'],
            ['L','.','L','L','.','L','L','.','L','L'],
            ['L','.','L','L','L','L','L','.','L','L'],
            ['.','.','L','.','L','.','.','.','.','.'],
            ['L','L','L','L','L','L','L','L','L','L'],
            ['L','.','L','L','L','L','L','L','.','L'],
            ['L','.','L','L','L','L','L','.','L','L'],
        ];
        $state1 = [
            ['#','.','#','#','.','#','#','.','#','#'],
            ['#','#','#','#','#','#','#','.','#','#'],
            ['#','.','#','.','#','.','.','#','.','.'],
            ['#','#','#','#','.','#','#','.','#','#'],
            ['#','.','#','#','.','#','#','.','#','#'],
            ['#','.','#','#','#','#','#','.','#','#'],
            ['.','.','#','.','#','.','.','.','.','.'],
            ['#','#','#','#','#','#','#','#','#','#'],
            ['#','.','#','#','#','#','#','#','.','#'],
            ['#','.','#','#','#','#','#','.','#','#'],
        ];
        $state2 = [
            ['#','.','L','L','.','L','L','.','L','#'],
            ['#','L','L','L','L','L','L','.','L','L'],
            ['L','.','L','.','L','.','.','L','.','.'],
            ['L','L','L','L','.','L','L','.','L','L'],
            ['L','.','L','L','.','L','L','.','L','L'],
            ['L','.','L','L','L','L','L','.','L','L'],
            ['.','.','L','.','L','.','.','.','.','.'],
            ['L','L','L','L','L','L','L','L','L','#'],
            ['#','.','L','L','L','L','L','L','.','L'],
            ['#','.','L','L','L','L','L','.','L','#'],
        ];
        $state3 = [
            ['#','.','L','#','.','#','#','.','L','#'],
            ['#','L','#','#','#','#','#','.','L','L'],
            ['L','.','#','.','#','.','.','#','.','.'],
            ['#','#','L','#','.','#','#','.','#','#'],
            ['#','.','#','#','.','#','L','.','#','#'],
            ['#','.','#','#','#','#','#','.','#','L'],
            ['.','.','#','.','#','.','.','.','.','.'],
            ['L','L','L','#','#','#','#','L','L','#'],
            ['#','.','L','#','#','#','#','#','.','L'],
            ['#','.','L','#','#','#','#','.','L','#'],
        ];

        $this->assertEquals($state1, $day11->applyRules_v2($state0));
        $this->assertEquals($state2, $day11->applyRules_v2($state1));
        $this->assertEquals($state3, $day11->applyRules_v2($state2));
    }

    public function testQuestion1() {
        $this->assertEquals(37, (new Day11())->question1(__DIR__ . DIRECTORY_SEPARATOR . "Day11.txt"));
    }

    public function testQuestion2() {
        $this->assertEquals(26, (new Day11())->question2(__DIR__ . DIRECTORY_SEPARATOR . "Day11.txt"));
    }
}